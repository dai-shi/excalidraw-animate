{"version":3,"sources":["../node_modules/browser-nativefs/dist/nativefs-legacy/directory-open.mjs","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncIterator.js"],"names":["e","t","r","a","i","name","s","n","isFile","push","getFile","then","Object","defineProperty","configurable","enumerable","get","isDirectory","getEntries","Promise","all","flat","recursive","window","chooseFileSystemEntries","type","_asyncIterator","iterable","method","Symbol","asyncIterator","call","iterator","TypeError"],"mappings":"yKACMA,EAAC,qCAAC,WAAMC,EAAEC,GAAR,MAAAC,EAAA,2FAAUC,EAAV,+BAAYH,EAAEI,KAAcF,EAAE,GAAGG,EAAE,GAAnC,oCAAsDC,EAAtD,EAAiFN,EAAC,UAAIG,EAAJ,YAASG,EAAEF,MAAOE,EAAEC,OAAOF,EAAEG,KAAKF,EAAEG,UAAUC,MAAM,SAAAX,GAAC,OAAEY,OAAOC,eAAeb,EAAE,qBAAqB,CAACc,cAAa,EAAGC,YAAW,EAAGC,IAAI,kBAAIf,SAAOM,EAAEU,aAAaf,GAAGC,EAAEM,KAAKT,EAAEO,EAAEL,EAAED,KAAnQ,cAA2DA,EAAEiB,cAA7D,gdAAwRC,QAAQC,IAAIjB,GAApS,2BAAwSkB,OAAxS,uCAAwTF,QAAQC,IAAId,GAApU,+KAAD,wDAA0U,8BAAe,uGAAML,EAAN,+BAAQ,IAAQqB,UAAUrB,EAAEqB,YAAW,EAAvC,SAAwDC,OAAOC,wBAAwB,CAACC,KAAK,mBAA7F,cAAgDvB,EAAhD,yBAAuHF,EAAEE,EAAED,EAAEqB,YAA7H,4C,gCCDjV,SAASI,EAAeC,GACrC,IAAIC,EAEJ,GAAsB,qBAAXC,OAAwB,CACjC,GAAIA,OAAOC,eAEK,OADdF,EAASD,EAASE,OAAOC,gBACL,OAAOF,EAAOG,KAAKJ,GAGzC,GAAIE,OAAOG,UAEK,OADdJ,EAASD,EAASE,OAAOG,WACL,OAAOJ,EAAOG,KAAKJ,GAI3C,MAAM,IAAIM,UAAU,gCAftB","file":"static/js/35.f8ab4815.chunk.js","sourcesContent":["// @license Â© 2020 Google LLC. Licensed under the Apache License, Version 2.0.\nconst e=async(t,r,i=t.name)=>{const a=[],s=[];for await(const n of t.getEntries()){const t=`${i}/${n.name}`;n.isFile?s.push(n.getFile().then((e=>Object.defineProperty(e,\"webkitRelativePath\",{configurable:!0,enumerable:!0,get:()=>t})))):n.isDirectory&&r&&a.push(e(n,r,t))}return[...(await Promise.all(a)).flat(),...await Promise.all(s)]};export default async(t={})=>{t.recursive=t.recursive||!1;const r=await window.chooseFileSystemEntries({type:\"open-directory\"});return e(r,t.recursive)};","export default function _asyncIterator(iterable) {\n  var method;\n\n  if (typeof Symbol !== \"undefined\") {\n    if (Symbol.asyncIterator) {\n      method = iterable[Symbol.asyncIterator];\n      if (method != null) return method.call(iterable);\n    }\n\n    if (Symbol.iterator) {\n      method = iterable[Symbol.iterator];\n      if (method != null) return method.call(iterable);\n    }\n  }\n\n  throw new TypeError(\"Object is not async iterable\");\n}"],"sourceRoot":""}