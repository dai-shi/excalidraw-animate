{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncIterator.js","../node_modules/browser-nativefs/dist/nativefs/directory-open-nativefs.mjs"],"names":["_asyncIterator","iterable","method","Symbol","asyncIterator","call","iterator","TypeError","t","e","i","a","r","isFile","getFile","push","isDirectory","getEntries","recursive","multiple","window","chooseFileSystemEntries","type","name"],"mappings":"yJAAe,SAASA,EAAeC,GACrC,IAAIC,EAEJ,GAAsB,qBAAXC,OAAwB,CACjC,GAAIA,OAAOC,eAEK,OADdF,EAASD,EAASE,OAAOC,gBACL,OAAOF,EAAOG,KAAKJ,GAGzC,GAAIE,OAAOG,UAEK,OADdJ,EAASD,EAASE,OAAOG,WACL,OAAOJ,EAAOG,KAAKJ,GAI3C,MAAM,IAAIM,UAAU,gCCdtB,IAAMC,EAAC,qCAAC,WAAMC,EAAEC,GAAR,kBAAAC,EAAA,2EAAUC,EAAV,+BAAY,GAAZ,uBAAuCH,GAAvC,8HAAkCE,EAAlC,GAA2CE,OAA3C,6BAAkDD,EAAlD,UAA+DD,EAAEG,UAAjE,yBAAoDC,KAApD,gDAA4EJ,EAAEK,aAAaN,GAA3F,kCAAoGF,EAApG,UAA4GG,EAAEM,aAA9G,gCAA2HP,EAA3H,KAA6HE,EAA7H,6WAAuIA,GAAvI,4EAAD,wDAA2I,8BAAe,6GAAMH,EAAN,+BAAQ,IAAQS,UAAUT,EAAES,YAAW,EAAGT,EAAEU,SAASV,EAAEU,WAAU,EAAjE,kBAAsFC,OAAOC,wBAAwB,CAACC,KAAK,iBAAiBH,SAASV,EAAEU,WAAvJ,cAA8ET,EAA9E,gBAA0KA,EAAEO,aAA5K,cAAkKL,EAAlK,iBAAsMJ,EAAEI,EAAEH,EAAES,WAA5M,8EAAmO,cAAc,KAAEK,KAAnP,4CAA0QH,OAAOC,wBAAwB,CAACC,KAAK,gBAAgBH,SAASV,EAAEU,WAA1U,eAAkQT,EAAlQ,iBAA6VA,EAAEO,aAA/V,eAAqVL,EAArV,iBAAyXJ,EAAEI,EAAEH,EAAES,WAA/X","file":"static/js/35.9102fd1b.chunk.js","sourcesContent":["export default function _asyncIterator(iterable) {\n  var method;\n\n  if (typeof Symbol !== \"undefined\") {\n    if (Symbol.asyncIterator) {\n      method = iterable[Symbol.asyncIterator];\n      if (method != null) return method.call(iterable);\n    }\n\n    if (Symbol.iterator) {\n      method = iterable[Symbol.iterator];\n      if (method != null) return method.call(iterable);\n    }\n  }\n\n  throw new TypeError(\"Object is not async iterable\");\n}","// @license Â© 2020 Google LLC. Licensed under the Apache License, Version 2.0.\nconst t=async(e,i,r=[])=>{for await(const a of e)a.isFile?r.push(await a.getFile()):a.isDirectory&&i&&await t(await a.getEntries(),i,r);return r};export default async(e={})=>{e.recursive=e.recursive||!1,e.multiple=e.multiple||!1;try{const i=await window.chooseFileSystemEntries({type:\"open-directory\",multiple:e.multiple}),r=await i.getEntries();return await t(r,e.recursive)}catch(i){if(\"TypeError\"===i.name)try{const i=await window.chooseFileSystemEntries({type:\"openDirectory\",multiple:e.multiple}),r=await i.getEntries();return await t(r,e.recursive)}catch(t){throw t}throw i}};"],"sourceRoot":""}